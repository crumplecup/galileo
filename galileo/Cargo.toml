[package]
name = "galileo"
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
documentation = "https://docs.rs/galileo"
description = "Cross-platform general purpose map rendering engine"
readme = "../README.md"
exclude = ["examples/data"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["wgpu", "serde", "winit"]
wgpu = ["dep:wgpu", "raw-window-handle"]
geojson = ["dep:geojson", "galileo-types/geojson"]

# Used to provide some fixtures for doctests
_tests = []

[dependencies]
cfg-if = "1"
async-trait = "0.1.82"
bytemuck = { version = "1.18", features = ["derive"] }
bytes = "1.7.2"
futures = "0.3.30"
winit = { version = "0.30.5", features = ["rwh_06"], optional = true }
log = "0.4.22"
lyon = { version = "1.0.1" }
galileo-types = { path = "../galileo-types", version = "0.1.1" }
galileo-mvt = { path = "../galileo-mvt", version = "0.1.1" }
num-traits = "0.2.19"
serde = { version = "1.0.210", optional = true, features = ["std", "derive"] }
web-time = "1.1.0"
thiserror = "1.0.63"
nalgebra = "0.33.0"
quick_cache = "0.6.9"
futures-intrusive = "0.5.0"
geojson = { version = "0.24.1", optional = true }
raw-window-handle = { version = "0.6.2", optional = true }
geozero = "0.13.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
wgpu = { version = "22.1.0", optional = true }
tokio = { version = "1.40.0", features = ["macros", "rt", "rt-multi-thread"] }
maybe-sync = { version = "0.1.1", features = ["sync"] }
reqwest = "0.12.7"
rayon = "1.10.0"
image = { version = "0.25.2", default-features = false, features = [
  "png",
  "jpeg",
] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
bytemuck = { version = "1.18", features = ["derive", "extern_crate_alloc"] }
console_error_panic_hook = "0.1.7"
console_log = "1.0"
wgpu = { version = "22.1.0", default-features = false, features = [
  "webgl",
  "wgsl",
] }
wasm-bindgen-futures = { version = "0.4.43" }
wasm-bindgen = "0.2.93"
wasm-bindgen-derive = { version = "0.3.0" }
js-sys = { version = "0.3.7" }
serde = { version = "1.0.210", features = ["std", "derive"] }
serde_bytes = { version = "0.11.15" }
bincode = "1.3.3"
serde-wasm-bindgen = "0.6.5"
maybe-sync = { version = "0.1.1", features = [] }
getrandom = { version = "0.2.15", features = ["js"] }
web-sys = { version = "0.3.70", features = [
  "Document",
  "Window",
  "Element",
  "HtmlImageElement",
  "HtmlCanvasElement",
  "CanvasRenderingContext2d",
  "ImageData",
  "Request",
  "Headers",
  "RequestInit",
  "RequestMode",
  "Response",
  "Worker",
  "DedicatedWorkerGlobalScope",
  "MessageEvent",
] }

[target.'cfg(target_os = "android")'.dependencies]
reqwest = { version = "0.12.7", features = ["native-tls-vendored"] }
winit = { version = "0.30.5", features = ["android-native-activity"] }


[dev-dependencies]
tokio-test = "0.4.4"
env_logger = "0.11.5"
serde_json = "1.0.128"
notify = "6.1.1"
bincode = "1.3.3"
approx = "0.5.1"
lazy_static = "1.5.0"
geo = "0.28.0"
csv = "1.3.0"
geo-types = "0.7.13"
las = { version = "0.9.1", features = ["laz"] }
anyhow = "1.0.89"
geojson = "0.24.1"
assert_matches = "1.5.0"

[[example]]
name = "render_to_file"
required-features = ["geojson"]
